{"version":3,"sources":["../src/ImageFileConverter.es6"],"names":["FormItem","Item","logger","getLogger","ImageFileConverter","option","getFieldProps","field","fieldOptions","wrapper","obj","dataType","transformImageFile","file","isJPG","type","isPNG","isGIF","isBMP","error","message","description","imageFileUpUrl","OPTION_IMAGE","OPTION_SAVE","OPTION_MD5","upOpt","state","len","length","queryUrl","i","url","responseStatus","props","form","getFieldDecorator","key","beforeUpload","onImageFileChange","fileList","formItemsConfig","disabled"],"mappings":"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","file":"ImageFileConverter.js","sourcesContent":["/**\n * Created by zxh on 2016/12/12.\n */\nimport React from 'react';\nimport {\n  Form,\n  Col,\n  Input,\n  Button,\n  DatePicker,\n  Select,\n  Table,\n  Icon,\n  Radio,\n  InputNumber,\n  Checkbox,\n  Modal,\n  message,\n  notification,\n  Affix,\n  Upload\n} from 'antd';\n\nconst FormItem = Form.Item;\n\nimport Logger from 'ns_logger';\n\n\nconst logger = Logger.getLogger('ImageFileConverter');\n\nclass ImageFileConverter {\n\n// options = {\n//   obj: InnerTable(this)\n//   field: formSchema[key]\n//   wrapper: colWrapper\n//   getFieldProps: InnerTable(this).getFieldProps  见../../DBTable/index ：401\n//   fieldOptions: {\n//     rules: field.rules,\n//     initialValue: field.initialValue,\n//     valuePropName: field.valuePropName\n//   }\n// }\n  convert(option) {\n    const {getFieldProps, field, fieldOptions, wrapper, obj} = option;\n    switch (field.dataType) {\n      case 'imageFile':\n        return this.transformImageFile(option);\n    }\n  }\n\n  /**\n    * 将schema中的一列转换为下拉框\n    *\n    * @param field\n    */\n  // transformImageFile(option) {\n  //   const {getFieldProps, field, fieldOptions, obj, wrapper} = option;\n  //   return wrapper((\n  //         {...obj.props.form.getFieldDecorator(field.key,fieldOptions)(<Upload action={field.imageFileUpUrl}  onChange={obj.onImageFileChange} fileList={obj.state.fileList}  >\n  //           <Button type=\"ghost\">\n  //             <Icon type=\"upload\" /> 上传图片\n  //           </Button>\n  //         </Upload>)}\n  //   ), field);\n  // }\n  beforeUpload(file) {\n    const isJPG = file.type === 'image/jpeg';\n    const isPNG = file.type === 'image/png';\n    const isGIF = file.type === 'image/gif';\n    const isBMP = file.type === 'image/bmp';\n    if (!isJPG && !isPNG && !isGIF && !isBMP ) {\n      notification.error({\n        message: '请上传正确的图片文件',\n        description: '系统支持jpg、png、gif、bmp，4种文件格式'});\n    }\n    return isJPG || isPNG || isGIF || isBMP;\n  }\n\n// options = {\n//   obj: InnerTable(this)\n//   field: formSchema[key]\n//   wrapper: colWrapper\n//   getFieldProps: InnerTable(this).getFieldProps  见../../DBTable/index ：401\n//   fieldOptions: {\n//     rules: field.rules,\n//     initialValue: field.initialValue,\n//     valuePropName: field.valuePropName\n//   }\n// }\n\n  transformImageFile(option) {\n      const {getFieldProps, field, fieldOptions, obj, wrapper} = option;\n      const imageFileUpUrl = field.imageFileUpUrl;\n      const OPTION_IMAGE =0x1;\n      const OPTION_SAVE =0x1<<1;\n      const OPTION_MD5 =0x1<<2;\n      const upOpt = obj.state.upOpt;\n      const len = upOpt ? upOpt.length : 0;\n      let queryUrl = 0;\n      for(let i=0; i < len; i++){\n        switch (upOpt[i]) {\n          case 'OPTION_SAVE':\n            queryUrl = OPTION_SAVE | queryUrl;\n            break;\n          case 'OPTION_MD5':\n            queryUrl = OPTION_MD5 | queryUrl;\n            break;\n        }\n      }\n      const url = `${imageFileUpUrl}?requestFlag=${queryUrl}&responseFlag=${obj.responseStatus}`\n\n    // colWrapper(formItem, field) {\n    //   return (\n    //     <FormItem key={field.key}\n    //               className={field.formItemClassName}\n    //               label={field.title}\n    //               labelCol={field.labelCol != undefined ? field.labelCol : {span: 6}}\n    //               wrapperCol={ field.wrapperCol != undefined  ? field.wrapperCol : {span : 18} }>\n    //       {formItem}\n    //     </FormItem>\n    //   );\n    // }\n\n\n// options = {\n//   obj: InnerTable(this)\n//   field: formSchema[key]\n//   wrapper: colWrapper\n//   getFieldProps: InnerTable(this).getFieldProps  见../../DBTable/index ：401\n//   fieldOptions: {\n//     rules: field.rules,\n//     initialValue: field.initialValue,\n//     valuePropName: field.valuePropName\n//   }\n// }\n\n\n      return wrapper(\n        ({\n          ...obj.props.form.getFieldDecorator(field.key, fieldOptions)\n\n            (<Upload beforeUpload={this.beforeUpload}\n                     action={url}\n                     onChange={obj.onImageFileChange}\n                     fileList={obj.state.fileList}\n                     disabled={\n                       obj.props.formItemsConfig\n                       && obj.props.formItemsConfig[field.key]\n                       && obj.props.formItemsConfig[field.key].disabled}>\n              <Button type=\"ghost\"\n                      disabled={\n                        obj.props.formItemsConfig\n                        && obj.props.formItemsConfig[field.key]\n                        && obj.props.formItemsConfig[field.key].disabled}>\n                <Icon type=\"upload\" /> 上传图片\n              </Button>\n            </Upload>)\n        }), field);\n    }\n}\nexport default ImageFileConverter;\n"]}