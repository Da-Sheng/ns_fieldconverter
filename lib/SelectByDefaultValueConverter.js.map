{"version":3,"sources":["../src/SelectByDefaultValueConverter.es6"],"names":["FormItem","Item","logger","getLogger","Option","SelectByDefaultValueConverter","option","getFieldProps","field","fieldOptions","wrapper","obj","dataType","transformSelectByDefault","selectOptionss","defaultSelect","forEach","push","value","name","props","form","getFieldDecorator","key","width","onSelectByDefaultValueChange","onSelect"],"mappings":";;;;;;;;qjBAAA;;;;;AAGA;;;;AACA;;AAqBA;;;;;;;;AAFA,IAAMA,WAAW,WAAKC,IAAtB;;AAKA,IAAMC,SAAS,oBAAOC,SAAP,CAAiB,+BAAjB,CAAf;AACA,IAAMC,SAAS,aAAOA,MAAtB;;IAEMC,6B;;;;;;;4BAEIC,M,EAAQ;AAAA,UACPC,aADO,GAC6CD,MAD7C,CACPC,aADO;AAAA,UACQC,KADR,GAC6CF,MAD7C,CACQE,KADR;AAAA,UACeC,YADf,GAC6CH,MAD7C,CACeG,YADf;AAAA,UAC6BC,OAD7B,GAC6CJ,MAD7C,CAC6BI,OAD7B;AAAA,UACsCC,GADtC,GAC6CL,MAD7C,CACsCK,GADtC;;AAEd,cAAQH,MAAMI,QAAd;AACE,aAAK,sBAAL;AACE,iBAAO,KAAKC,wBAAL,CAA8BP,MAA9B,CAAP;AAFJ;AAID;;AAED;;;;;;;;6CAKyBA,M,EAAQ;AAAA,UACxBC,aADwB,GAC4BD,MAD5B,CACxBC,aADwB;AAAA,UACTC,KADS,GAC4BF,MAD5B,CACTE,KADS;AAAA,UACFC,YADE,GAC4BH,MAD5B,CACFG,YADE;AAAA,UACYE,GADZ,GAC4BL,MAD5B,CACYK,GADZ;AAAA,UACiBD,OADjB,GAC4BJ,MAD5B,CACiBI,OADjB;;AAE/B,UAAII,iBAAiB,EAArB;AACAN,YAAMO,aAAN,CAAoBC,OAApB,CAA4B,UAACV,MAAD,EAAY;AACtCQ,uBAAeG,IAAf,CAAoB;AAAC,gBAAD;AAAA,YAAQ,KAAKX,OAAOY,KAApB,EAA2B,OAAOZ,OAAOY,KAAzC;AAAiDZ,iBAAOa;AAAxD,SAApB;AACD,OAFD;;AAIA,aAAOT,qBACDC,IAAIS,KAAJ,CAAUC,IAAV,CAAeC,iBAAf,CAAiCd,MAAMe,GAAvC,EAA2Cd,YAA3C,EAAyD;AAAA;AAAA;AAC3D,gBAAK,OADsD;AAE3D,iBAAO,EAAEe,OAAO,GAAT,EAFoD;AAG3D,oBAAUb,IAAIc,4BAH6C;AAI3D,uBAAY,oBAJ+C;AAK3D,oBAAU,CAAC,CAACjB,MAAMkB,QAAR,GAAmBlB,MAAMkB,QAAzB,GAAoC,YAAM,CAAE;AALK;AAO1DZ;AAP0D,OAAzD,CADC,GAUJN,KAVI,CAAP;AAWD;;;;;;kBAIYH,6B","file":"SelectByDefaultValueConverter.js","sourcesContent":["/**\n * Created by zxh on 2016/12/12.\n */\nimport React from 'react';\nimport {\n  Form,\n  Col,\n  Input,\n  Button,\n  DatePicker,\n  Select,\n  Table,\n  Icon,\n  Radio,\n  InputNumber,\n  Checkbox,\n  Modal,\n  message,\n  notification,\n  Affix,\n  Upload\n} from 'antd';\n\nconst FormItem = Form.Item;\n\nimport Logger from 'ns_logger';\n\n\nconst logger = Logger.getLogger('SelectByDefaultValueConverter');\nconst Option = Select.Option;\n\nclass SelectByDefaultValueConverter {\n\n  convert(option) {\n    const {getFieldProps, field, fieldOptions, wrapper, obj} = option;\n    switch (field.dataType) {\n      case 'selectByDefaultValue':\n        return this.transformSelectByDefault(option);\n    }\n  }\n\n  /**\n    * 将schema中的一列转换为下拉框\n    *\n    * @param field\n    */\n  transformSelectByDefault(option) {\n    const {getFieldProps, field, fieldOptions, obj, wrapper} = option;\n    let selectOptionss = [];\n    field.defaultSelect.forEach((option) => {\n      selectOptionss.push(<Option key={option.value} value={option.value}>{option.name}</Option>);\n    });\n\n    return wrapper((\n      {...obj.props.form.getFieldDecorator(field.key,fieldOptions)(<Select\n        size=\"large\"\n        style={{ width: 200 }}\n        onChange={obj.onSelectByDefaultValueChange}\n        placeholder=\"请选择\"\n        onSelect={!!field.onSelect ? field.onSelect : () => {}}\n        >\n        {selectOptionss}\n      </Select>)}\n    ), field);\n  }\n\n}\n\nexport default SelectByDefaultValueConverter;\n"]}