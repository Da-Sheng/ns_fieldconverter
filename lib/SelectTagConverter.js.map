{"version":3,"sources":["../src/SelectTagConverter.es6"],"names":["FormItem","Item","logger","getLogger","inputType","dropdownStyle","SelectTagConverter","onSelectTagChange","value","typeName","length","nums","error","wrongTips","time","splice","option","getFieldProps","field","fieldOptions","wrapper","obj","dataType","transformSelectTag","props","form","getFieldDecorator","key","width","bind","placeholder","state","selectTagChildren"],"mappings":";;;;;;;;qjBAAA;;;;;AAGA;;;;AACA;;AAoBA;;;;;;;;AADA,IAAMA,WAAW,WAAKC,IAAtB;;AAEA,IAAMC,SAAS,oBAAOC,SAAP,CAAiB,oBAAjB,CAAf;;AAEA,IAAIC,SAAJ,C,CAAiB;AACjB,IAAIC,aAAJ,C,CAAoB;;IAEdC,kB;;;;SASJC,iB,GAAoB,UAACC,KAAD,EAAW;AAAG;;AAEhC;;AAEA,UAAGJ,SAAH,EAAa;AAAI;AACf,YAAGA,UAAUK,QAAV,IAAsB,WAAtB,IAAqCD,MAAME,MAAN,GAAeN,UAAUO,IAAjE,EAAsE;AACpE,wBAAQC,KAAR,CAAcR,UAAUS,SAAxB,EAAkCT,UAAUU,IAA5C;AACAN,gBAAMO,MAAN,CAAaX,UAAUO,IAAvB;AACD;AACF;AACF,K;;;;;4BAjBOK,M,EAAQ;AAAA,UACPC,aADO,GAC6CD,MAD7C,CACPC,aADO;AAAA,UACQC,KADR,GAC6CF,MAD7C,CACQE,KADR;AAAA,UACeC,YADf,GAC6CH,MAD7C,CACeG,YADf;AAAA,UAC6BC,OAD7B,GAC6CJ,MAD7C,CAC6BI,OAD7B;AAAA,UACsCC,GADtC,GAC6CL,MAD7C,CACsCK,GADtC;;AAEd,cAAQH,MAAMI,QAAd;AACE,aAAK,WAAL;AACE,iBAAO,KAAKC,kBAAL,CAAwBP,MAAxB,CAAP;AAFJ;AAID;;;;AAYD;;;;;uCAKmBA,M,EAAQ;AAAA,UAClBC,aADkB,GACkCD,MADlC,CAClBC,aADkB;AAAA,UACHC,KADG,GACkCF,MADlC,CACHE,KADG;AAAA,UACIC,YADJ,GACkCH,MADlC,CACIG,YADJ;AAAA,UACkBE,GADlB,GACkCL,MADlC,CACkBK,GADlB;AAAA,UACuBD,OADvB,GACkCJ,MADlC,CACuBI,OADvB;;;AAGzBhB,kBAAYc,MAAMd,SAAlB,CAHyB,CAGa;AACtCC,sBAAgBa,MAAMb,aAAtB,CAJyB,CAIc;AACvC,UAAGa,MAAMb,aAAT,EAAuB;AAAE;AACvBA,wBAAgB,EAAC,WAAU,MAAX,EAAhB;AACD;;AAED,aAAOe,qBACEC,IAAIG,KAAJ,CAAUC,IAAV,CAAeC,iBAAf,CAAiCR,MAAMS,GAAvC,EAA2CR,YAA3C,EAAyD;AAAA;AAAA,UAAQ,MAAK,MAAb;AACpD,iBAAS,EAAES,OAAO,MAAT,EAD2C;AAEpD,oBAAY,KAAKrB,iBAAL,CAAuBsB,IAAvB,CAA4B,IAA5B,CAFwC;AAGpD,uBAAeX,MAAMY,WAH+B;AAIpD,2BAAmB,CAAC,GAAD,EAAK,GAAL,CAJiC,CAItB;AAJsB,YAKpD,eAAiBzB;AALmC;AAOzDgB,YAAIU,KAAJ,CAAUC;AAP+C,OAAzD,CADF,GAUJd,KAVI,CAAP;AAWD;;;;;;kBAIYZ,kB","file":"SelectTagConverter.js","sourcesContent":["/**\n * Created by zxh on 2016/12/12.\n */\nimport React from 'react';\nimport {\n  Form,\n  Col,\n  Input,\n  Button,\n  DatePicker,\n  Select,\n  Table,\n  Icon,\n  Radio,\n  InputNumber,\n  Checkbox,\n  Modal,\n  message,\n  notification,\n  Affix,\n  Upload,\n} from 'antd';\n\nconst FormItem = Form.Item;\nimport Logger from 'ns_logger';\nconst logger = Logger.getLogger('SelectTagConverter');\n\nvar inputType ;  //限制输入个数配置\nvar dropdownStyle ; //是否显示下拉菜单\n\nclass SelectTagConverter {\n\n  convert(option) {\n    const {getFieldProps, field, fieldOptions, wrapper, obj} = option;\n    switch (field.dataType) {\n      case 'selectTag':\n        return this.transformSelectTag(option);\n    }\n  }\n  onSelectTagChange = (value) => {  //监听输入框value变化\n\n    //inputType形如：{ typeName: 'MaxLength',nums:'200', wrongTips: '选择对象最多200个,超过则无效！',time:'3' }\n\n    if(inputType){   //需要在formSchema里面设置inputType做自定义设置，详细见推送对象的formSchema\n      if(inputType.typeName == \"MaxLength\" && value.length > inputType.nums){  \n        message.error(inputType.wrongTips,inputType.time);\n        value.splice(inputType.nums);\n      }\n    }\n  }\n  /**\n    * 将schema中的一列转换为下拉框\n    *\n    * @param field\n    */\n  transformSelectTag(option) {\n    const {getFieldProps, field, fieldOptions, obj, wrapper} = option;\n\n    inputType = field.inputType ;         //限制输入个数\n    dropdownStyle = field.dropdownStyle ;  //是否显示下拉菜单(true为隐藏下拉菜单)\n    if(field.dropdownStyle){ //给dropdownStyle重新赋值样式\n      dropdownStyle = {'display':'none'}\n    }\n\n    return wrapper((\n         {...obj.props.form.getFieldDecorator(field.key,fieldOptions)(<Select mode=\"tags\"\n                  style = {{ width: '100%' }}\n                  onChange = {this.onSelectTagChange.bind(this)}\n                  placeholder = {field.placeholder}\n                  tokenSeparators = {[',','，']} //切割规则是中文逗号也可以是英文逗号\n                  dropdownStyle = {dropdownStyle}\n          >\n            {obj.state.selectTagChildren}\n          </Select>)}\n    ), field);\n  }\n\n}\n\nexport default SelectTagConverter;\n"]}