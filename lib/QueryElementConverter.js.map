{"version":3,"sources":["../src/QueryElementConverter.es6"],"names":["FormItem","Item","RangePicker","Option","RadioGroup","Group","logger","getLogger","QueryElementFieldConverter","betweenColWrapper","beginFormItem","endFormItem","field","key","title","span","option","options","getFieldProps","fieldOptions","wrapper","obj","id","debug","forEach","push","value","name","props","form","getFieldDecorator","placeholder","mode","showSearch","filterOption","optionLabelProp","initialValue","label","cols","dataType","placeholderBegin","placeholderEnd","defaultValue","error","items","showType","transformSelect","transformRadio","transformCheckbox","transformMultiSelect","transformBetween","col"],"mappings":"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","file":"QueryElementConverter.js","sourcesContent":["/**\n * Created by zxh on 2016/12/12.\n */\nimport React from 'react';\nimport moment from 'moment';\nimport {\n  Form,\n  Col,\n  Input,\n  Button,\n  DatePicker,\n  Select,\n  Table,\n  Icon,\n  Radio,\n  InputNumber,\n  Checkbox,\n  Modal,\n  message,\n  notification,\n  Affix,\n  Upload\n} from 'antd';\n\nconst FormItem = Form.Item;\nconst { RangePicker } = DatePicker;\nimport Logger from 'ns_logger';\nconst Option = Select.Option;\nconst RadioGroup = Radio.Group;\n\nconst logger = Logger.getLogger('QueryElementFieldConverter');\n\nclass QueryElementFieldConverter {\n\n\n /**\n   * 将schema中的一列转换为下拉框\n   *\n   * @param field\n   */\n  transformSelect(option) {\n    // TODO: 这里是否要做schema校验\n    const options = [];\n    const {getFieldProps, field, fieldOptions, wrapper,obj} = option;\n    let id = 0;\n    logger.debug('transform field %o to Select component', field);\n    if (typeof field.options === 'function') {\n      field.options = field.options();\n    }\n    field.options.forEach((option) => {\n      id++;\n      options.push(<Option key={id} value={option.value}>{option.name}</Option>);\n    });\n\n    return wrapper((\n      {...obj.props.form.getFieldDecorator(field.key, fieldOptions)(<Select placeholder={field.placeholder || '请选择'}\n                                                                            size=\"default\"\n                                                                            mode={field.mode}\n                                                                            showSearch={field.showSearch}\n                                                                            filterOption={field.filterOption || true}\n                                                                            optionLabelProp={field.optionLabelProp || 'children'}>\n        {options}\n      </Select>)}\n    ), field);\n  }\n\n  /**\n   * 将schema中的一列转换为单选框\n   *\n   * @param field\n   */\n  transformRadio(option) {\n    const options = [];\n    const {getFieldProps, field, fieldOptions, wrapper} = option;\n\n\n    logger.debug('transform field %o to Radio component', field);\n    field.options.forEach((option) => {\n      options.push(<Radio key={option.key} value={option.key}>{option.value}</Radio>);\n    });\n\n    return wrapper((\n      <RadioGroup {...getFieldProps(field.key, {initialValue: field.initialValue}) }\n                  defaultValue={field.initialValue}>\n        {options}\n      </RadioGroup>\n    ), field);\n  }\n\n    /**\n   * 将schema中的一列转换为checkbox\n   *\n   * @param field\n   */\n  transformCheckbox(option) {\n    const options = [];\n    const {getFieldProps, field, fieldOptions, wrapper} = option;\n\n    logger.debug('transform field %o to Checkbox component', field);\n    field.options.forEach((option) => {\n      options.push({ label: option.value, value: option.key });\n    });\n\n    return wrapper((\n      <CheckboxGroup options={options} {...getFieldProps(field.key) } />\n    ), field);\n  }\n\n  /**\n   * 转换为下拉多选框\n   *\n   * @param field\n   * @returns {XML}\n   */\n  transformMultiSelect(option) {\n    const options = [];\n    const {getFieldProps, field, fieldOptions, wrapper} = option;\n\n    logger.debug('transform field %o to MultipleSelect component', field);\n    field.options.forEach((option) => {\n      options.push(<Option key={option.key} value={option.key}>{option.value}</Option>);\n    });\n\n    return wrapper((\n      <Select mode='multiple' placeholder={field.placeholder || '请选择'} size=\"default\" {...getFieldProps(field.key) }>\n        {options}\n      </Select>\n    ), field);\n  }\n\n    /**\n   * 也是个辅助函数, 由于是范围查询, 输入的formItem是两个, 一个用于begin一个用于end\n   *\n   * @param beginFormItem\n   * @param endFormItem\n   * @param field\n   * @returns {XML}\n   */\n  betweenColWrapper = (beginFormItem, endFormItem, field) => {\n    // 布局真是个麻烦事\n    // col内部又用了一个row做布局\n    // const {getFieldProps} = this.props.form;\n    return (\n      <Col key={`${field.key}Begin`} sm={8}>\n        <Row>\n          <Col span={16}>\n            <FormItem key={`${field.key}Begin`} label={field.title} labelCol={{ span: 15 }} wrapperCol={{ span: 9 }}>\n              {beginFormItem}\n            </FormItem>\n          </Col>\n          <Col span={7} offset={1}>\n            <FormItem key={`${field.key}End`} labelCol={{ span: 10 }} wrapperCol={{ span: 14 }}>\n              {endFormItem}\n            </FormItem>\n          </Col>\n        </Row>\n      </Col>\n    );\n  }\n\n  /**\n   * between类型比较特殊, 普通元素每个宽度是8, int和float的between元素宽度也是8, 但datetime类型的between元素宽度是16\n   * 否则排版出来不能对齐, 太丑了, 逼死强迫症\n   * 而且普通的transform函数返回是一个object, 而这个函数返回是一个array, 就是因为datetime的between要占用两列\n   *\n   * @param field\n   */\n  transformBetween(option) {\n    const cols = [];\n    let beginFormItem;\n    let endFormItem;\n    const {getFieldProps, field, fieldOptions, wrapper} = option;\n\n    switch (field.dataType) {\n      case 'int':\n        logger.debug('transform field %o to integer BETWEEN component', field);\n        beginFormItem = (<InputNumber size=\"default\"\n          placeholder={field.placeholderBegin || '最小值'} {...getFieldProps(`${field.key}Begin`) } />);\n        endFormItem = (<InputNumber size=\"default\"\n          placeholder={field.placeholderEnd || '最大值'} {...getFieldProps(`${field.key}End`) } />);\n        cols.push(this.betweenColWrapper(beginFormItem, endFormItem, field));\n        break;\n      case 'float':\n        logger.debug('transform field %o to float BETWEEN component', field);\n        beginFormItem = (<InputNumber step={0.01} size=\"default\"\n          placeholder={field.placeholderBegin || '最小值'} {...getFieldProps(`${field.key}Begin`) } />);\n        endFormItem = (<InputNumber step={0.01} size=\"default\"\n          placeholder={field.placeholderEnd || '最大值'} {...getFieldProps(`${field.key}End`) } />);\n        cols.push(this.betweenColWrapper(beginFormItem, endFormItem, field));\n        break;\n      // datetime类型的between要占用两个Col\n      // 不写辅助函数了, 直接这里写jsx吧...\n      case 'datetime':\n        logger.debug('transform field %o to datetime BETWEEN component', field);\n        cols.push(\n          <Col key={`${field.key}Begin`} span={8}>\n            <FormItem key={`${field.key}Begin`} label={field.title} labelCol={{ span: 6 }} wrapperCol={{ span: 18 }}>\n              <DatePicker  format=\"YYYY-MM-DD\"\n                placeholder={field.placeholderBegin || '开始日期'} {...getFieldProps(`${field.key}Begin`) } />\n            </FormItem>\n          </Col>\n        );\n        cols.push(<Col key={`${field.key}End`} span={8}>\n          <FormItem key={`${field.key}End`} labelCol={{ span: 6 }} wrapperCol={{ span: 18 }}>\n            <DatePicker format=\"YYYY-MM-DD\"\n              placeholder={field.placeholderEnd || '结束日期'} {...getFieldProps(`${field.key}End`) } />\n          </FormItem>\n        </Col>);\n        break;\n      case 'datetimes':\n        logger.debug('transform field %o to datetime BETWEEN component', field);\n        cols.push(\n          <Col key={`${field.key}`} span={16}>\n            <FormItem key={`${field.key}`} label={field.title} labelCol={{ span: 3 }} wrapperCol={{ span: 18 }}>\n              <RangePicker format=\"YYYY-MM-DD HH:mm:ss\" showTime={{defaultValue: [moment('00:00:00', 'HH:mm:ss'), moment('23:59:59', 'HH:mm:ss')]}}\n                placeholder={['开始日期', '结束日期']} {...getFieldProps(`${field.key}`) } />\n            </FormItem>\n          </Col>\n        );\n        break;\n      default:\n        // 理论上来说不会出现这种情况\n        logger.error('unknown dataType: %s', field.dataType);\n    }\n    return cols;\n  }\n\n  convert(option) {\n    const options = [];\n\n\n    var items=null;\n\n    const {getFieldProps, field, fieldOptions, wrapper} = option;\n\n    switch (field.showType) {\n      case 'select':\n        items=this.transformSelect(option);\n        break;\n      case 'radio':\n        items=this.transformRadio(option);\n        break;\n      case 'checkbox':\n        items=this.transformCheckbox(option);\n        break;\n      case 'multiSelect':\n        items=this.transformMultiSelect(option);\n        break;\n      case 'between':\n        items=[];\n        for (const col of this.transformBetween(option)) {  // between类型比较特殊, 返回的是一个数组\n          items.push(col)\n        }\n        break;\n      case 'betweens':\n        items=this.transformBetween(option)[0];\n        break;\n    }\n    return items;\n  }\n\n\n}\n\nexport default QueryElementFieldConverter;\n"]}