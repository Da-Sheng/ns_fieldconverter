{"version":3,"sources":["../src/ResponseDataConverter.es6"],"names":["FormItem","Item","logger","getLogger","ResponseDataConverter","option","getFieldProps","field","fieldOptions","wrapper","obj","dataType","transformResponseData","props","form","getFieldDecorator","key","placeholder"],"mappings":";;;;;;;;qjBAAA;;;;;AAGA;;;;AACA;;AAqBA;;;;;;;;AAFA,IAAMA,WAAW,WAAKC,IAAtB;;AAKA,IAAMC,SAAS,oBAAOC,SAAP,CAAiB,uBAAjB,CAAf;;IAEMC,qB;;;;;;;4BAEIC,M,EAAQ;AAAA,UACPC,aADO,GAC6CD,MAD7C,CACPC,aADO;AAAA,UACQC,KADR,GAC6CF,MAD7C,CACQE,KADR;AAAA,UACeC,YADf,GAC6CH,MAD7C,CACeG,YADf;AAAA,UAC6BC,OAD7B,GAC6CJ,MAD7C,CAC6BI,OAD7B;AAAA,UACsCC,GADtC,GAC6CL,MAD7C,CACsCK,GADtC;;AAEd,cAAQH,MAAMI,QAAd;AACE,aAAK,cAAL;AACE,iBAAO,KAAKC,qBAAL,CAA2BP,MAA3B,CAAP;AAFJ;AAID;;AAED;;;;;;;;0CAKsBA,M,EAAQ;AAAA,UACrBC,aADqB,GAC+BD,MAD/B,CACrBC,aADqB;AAAA,UACNC,KADM,GAC+BF,MAD/B,CACNE,KADM;AAAA,UACCC,YADD,GAC+BH,MAD/B,CACCG,YADD;AAAA,UACeE,GADf,GAC+BL,MAD/B,CACeK,GADf;AAAA,UACoBD,OADpB,GAC+BJ,MAD/B,CACoBI,OADpB;;AAE5B,aAAOA,qBACGC,IAAIG,KAAJ,CAAUC,IAAV,CAAeC,iBAAf,CAAiCR,MAAMS,GAAvC,EAA2CR,YAA3C,EAAyD,6CAAO,aAAaD,MAAMU,WAA1B,EAAuC,MAAK,SAA5C,EAAsD,UAAS,MAA/D,GAAzD,CADH,GAEJV,KAFI,CAAP;AAGD;;;;;;kBAIYH,qB","file":"ResponseDataConverter.js","sourcesContent":["/**\n * Created by zxh on 2016/12/12.\n */\nimport React from 'react';\nimport {\n  Form,\n  Col,\n  Input,\n  Button,\n  DatePicker,\n  Select,\n  Table,\n  Icon,\n  Radio,\n  InputNumber,\n  Checkbox,\n  Modal,\n  message,\n  notification,\n  Affix,\n  Upload\n} from 'antd';\n\nconst FormItem = Form.Item;\n\nimport Logger from 'ns_logger';\n\n\nconst logger = Logger.getLogger('ResponseDataConverter');\n\nclass ResponseDataConverter {\n\n  convert(option) {\n    const {getFieldProps, field, fieldOptions, wrapper, obj} = option;\n    switch (field.dataType) {\n      case 'responseData':\n        return this.transformResponseData(option);\n    }\n  }\n\n  /**\n    * 将schema中的一列转换为下拉框\n    *\n    * @param field\n    */\n  transformResponseData(option) {\n    const {getFieldProps, field, fieldOptions, obj, wrapper} = option;\n    return wrapper((\n          {...obj.props.form.getFieldDecorator(field.key,fieldOptions)(<Input placeholder={field.placeholder} size=\"default\" disabled=\"true\" />)}\n    ), field);\n  }\n\n}\n\nexport default ResponseDataConverter;\n"]}