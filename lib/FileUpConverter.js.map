{"version":3,"sources":["../src/FileUpConverter.es6"],"names":["FormItem","Item","logger","getLogger","FileUpConverter","option","getFieldProps","field","fieldOptions","wrapper","obj","dataType","transformFileUp","imageFileUpUrl","fileUpUrl","OPTION_IMAGE","OPTION_SAVE","OPTION_MD5","upOpt","state","len","length","queryUrl","i","url","responseStatus","props","form","getFieldDecorator","key","onFileUpChange","fileObjs","houZhui"],"mappings":";;;;;;;;qjBAAA;;;;;AAGA;;;;AACA;;AAqBA;;;;;;;;AAFA,IAAMA,WAAW,WAAKC,IAAtB;;AAKA,IAAMC,SAAS,oBAAOC,SAAP,CAAiB,iBAAjB,CAAf;;IAEMC,e;;;;;;;4BAEIC,M,EAAQ;AAAA,UACPC,aADO,GAC6CD,MAD7C,CACPC,aADO;AAAA,UACQC,KADR,GAC6CF,MAD7C,CACQE,KADR;AAAA,UACeC,YADf,GAC6CH,MAD7C,CACeG,YADf;AAAA,UAC6BC,OAD7B,GAC6CJ,MAD7C,CAC6BI,OAD7B;AAAA,UACsCC,GADtC,GAC6CL,MAD7C,CACsCK,GADtC;;AAEd,cAAQH,MAAMI,QAAd;AACE,aAAK,QAAL;AACE,iBAAO,KAAKC,eAAL,CAAqBP,MAArB,CAAP;AAFJ;AAID;;AAGD;;;;;;;;oCAKgBA,M,EAAQ;AAAA,UACfC,aADe,GACqCD,MADrC,CACfC,aADe;AAAA,UACAC,KADA,GACqCF,MADrC,CACAE,KADA;AAAA,UACOC,YADP,GACqCH,MADrC,CACOG,YADP;AAAA,UACqBE,GADrB,GACqCL,MADrC,CACqBK,GADrB;AAAA,UAC0BD,OAD1B,GACqCJ,MADrC,CAC0BI,OAD1B;;AAEtB,UAAMI,iBAAiBN,MAAMO,SAA7B;AACA,UAAMC,eAAc,GAApB;AACA,UAAMC,cAAa,OAAK,CAAxB;AACA,UAAMC,aAAY,OAAK,CAAvB;AACA,UAAMC,QAAQR,IAAIS,KAAJ,CAAUD,KAAxB;AACA,UAAME,MAAMF,MAAMG,MAAlB;AACA,UAAIC,WAAW,CAAf;AACA,WAAI,IAAIC,IAAE,CAAV,EAAaA,IAAIH,GAAjB,EAAsBG,GAAtB,EAA0B;AACxB,gBAAQL,MAAMK,CAAN,CAAR;AACE,eAAK,aAAL;AACED,uBAAWN,cAAcM,QAAzB;AACA;AACF,eAAK,YAAL;AACEA,uBAAWL,aAAaK,QAAxB;AACA;AANJ;AAQD;AACD,UAAME,MAASX,cAAT,qBAAuCS,QAAvC,sBAAgEZ,IAAIe,cAA1E;AACA,aAAOhB,SAAS;AAAT,mBAEFC,IAAIgB,KAAJ,CAAUC,IAAV,CAAeC,iBAAf,CAAiCrB,MAAMsB,GAAvC,EAA4CrB,YAA5C,EAEC;AAAA;AAAA,UAAQ,QAAQgB,GAAhB,EAAqB,UAAUd,IAAIoB,cAAnC,EAAoD,UAAUpB,IAAIS,KAAJ,CAAUY,QAAxE,EAAkF,SAASrB,IAAIsB,OAA/F;AACE;AAAA;AAAA,YAAQ,MAAK;AAAb;AAEE,sDAAM,MAAK,QAAX,GAFF;AAAA;AAAA;AADF,OAFD,CAFE,GAWDzB,KAXC,CAAP;AAYD;;;;;;kBAIYH,e","file":"FileUpConverter.js","sourcesContent":["/**\n * Created by zxh on 2016/12/12.\n */\nimport React from 'react';\nimport {\n  Form,\n  Col,\n  Input,\n  Button,\n  DatePicker,\n  Select,\n  Table,\n  Icon,\n  Radio,\n  InputNumber,\n  Checkbox,\n  Modal,\n  message,\n  notification,\n  Affix,\n  Upload\n} from 'antd';\n\nconst FormItem = Form.Item;\n\nimport Logger from 'ns_logger';\n\n\nconst logger = Logger.getLogger('FileUpConverter');\n\nclass FileUpConverter {\n\n  convert(option) {\n    const {getFieldProps, field, fieldOptions, wrapper, obj} = option;\n    switch (field.dataType) {\n      case 'fileUp':\n        return this.transformFileUp(option);\n    }\n  }\n\n\n  /**\n    * 将schema中的一列转换为下拉框\n    *\n    * @param field\n    */\n  transformFileUp(option) {\n    const {getFieldProps, field, fieldOptions, obj, wrapper} = option;\n    const imageFileUpUrl = field.fileUpUrl;\n    const OPTION_IMAGE =0x1;\n    const OPTION_SAVE =0x1<<1;\n    const OPTION_MD5 =0x1<<2;\n    const upOpt = obj.state.upOpt\n    const len = upOpt.length;\n    let queryUrl = 0;\n    for(let i=0; i < len; i++){\n      switch (upOpt[i]) {\n        case 'OPTION_SAVE':\n          queryUrl = OPTION_SAVE | queryUrl;\n          break;\n        case 'OPTION_MD5':\n          queryUrl = OPTION_MD5 | queryUrl;\n          break;\n      }\n    }\n    const url = `${imageFileUpUrl}?requestFlag=${queryUrl}&responseFlag=${obj.responseStatus}`\n    return wrapper( //给文件上传功能包装成表单\n      ({\n      ...obj.props.form.getFieldDecorator(field.key, fieldOptions)\n          (\n          <Upload action={url} onChange={obj.onFileUpChange}  fileList={obj.state.fileObjs} houZhui={obj.houZhui}>\n            <Button type=\"ghost\"\n            >\n              <Icon type=\"upload\" /> 上传文件\n            </Button>\n          </Upload>\n          )\n      }), field);\n  }\n\n}\n\nexport default FileUpConverter;\n"]}