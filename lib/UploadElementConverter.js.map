{"version":3,"sources":["../src/UploadElementConverter.es6"],"names":["FormItem","Item","logger","getLogger","UploadElementConverter","option","getFieldProps","field","fieldOptions","wrapper","obj","dataType","transformUpload","props","form","getFieldDecorator","key","state","fileList","actionAdr","handleUpChange"],"mappings":";;;;;;;;qjBAAA;;;;;AAGA;;;;AACA;;AAqBA;;;;;;;;AAFA,IAAMA,WAAW,WAAKC,IAAtB;;AAKA,IAAMC,SAAS,oBAAOC,SAAP,CAAiB,wBAAjB,CAAf;;IAEMC,sB;;;;;;;4BAEIC,M,EAAQ;AAAA,UACPC,aADO,GAC6CD,MAD7C,CACPC,aADO;AAAA,UACQC,KADR,GAC6CF,MAD7C,CACQE,KADR;AAAA,UACeC,YADf,GAC6CH,MAD7C,CACeG,YADf;AAAA,UAC6BC,OAD7B,GAC6CJ,MAD7C,CAC6BI,OAD7B;AAAA,UACsCC,GADtC,GAC6CL,MAD7C,CACsCK,GADtC;;AAEd,cAAQH,MAAMI,QAAd;AACE,aAAK,QAAL;AACE,iBAAO,KAAKC,eAAL,CAAqBP,MAArB,CAAP;AAFJ;AAID;;AAED;;;;;;;;oCAKgBA,M,EAAQ;AAAA,UACfC,aADe,GACqCD,MADrC,CACfC,aADe;AAAA,UACAC,KADA,GACqCF,MADrC,CACAE,KADA;AAAA,UACOC,YADP,GACqCH,MADrC,CACOG,YADP;AAAA,UACqBE,GADrB,GACqCL,MADrC,CACqBK,GADrB;AAAA,UAC0BD,OAD1B,GACqCJ,MADrC,CAC0BI,OAD1B;;AAEtB,aAAOA,qBACDC,IAAIG,KAAJ,CAAUC,IAAV,CAAeC,iBAAf,CAAiCR,MAAMS,GAAvC,EAA2CR,YAA3C,EAAyD;AAAA;AAAA,UAAQ,UAAUE,IAAIO,KAAJ,CAAUC,QAA5B,EAAsC,QAAQX,MAAMY,SAApD,EAA+D,UAAS,SAAxE,EAAkF,UAAUT,IAAIU,cAAhG;AAC3D;AAAA;AAAA,YAAQ,MAAK,OAAb;AACE,sDAAM,MAAK,QAAX,GADF;AAAA;AAAA;AAD2D,OAAzD,CADC,GAMJb,KANI,CAAP;AAOD;;;;;;kBAIYH,sB","file":"UploadElementConverter.js","sourcesContent":["/**\n * Created by zxh on 2016/12/12.\n */\nimport React from 'react';\nimport {\n  Form,\n  Col,\n  Input,\n  Button,\n  DatePicker,\n  Select,\n  Table,\n  Icon,\n  Radio,\n  InputNumber,\n  Checkbox,\n  Modal,\n  message,\n  notification,\n  Affix,\n  Upload\n} from 'antd';\n\nconst FormItem = Form.Item;\n\nimport Logger from 'ns_logger';\n\n\nconst logger = Logger.getLogger('UploadElementConverter');\n\nclass UploadElementConverter {\n\n  convert(option) {\n    const {getFieldProps, field, fieldOptions, wrapper, obj} = option;\n    switch (field.dataType) {\n      case 'upload':\n        return this.transformUpload(option);\n    }\n  }\n\n  /**\n    * 将schema中的一列转换为下拉框\n    *\n    * @param field\n    */\n  transformUpload(option) {\n    const {getFieldProps, field, fieldOptions, obj, wrapper} = option;\n    return wrapper((\n      {...obj.props.form.getFieldDecorator(field.key,fieldOptions)(<Upload fileList={obj.state.fileList} action={field.actionAdr} listType=\"picture\" onChange={obj.handleUpChange}>\n        <Button type=\"ghost\">\n          <Icon type=\"upload\" /> 点击上传\n              </Button>\n      </Upload>)}\n    ), field);\n  }\n\n}\n\nexport default UploadElementConverter;\n"]}