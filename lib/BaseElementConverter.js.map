{"version":3,"sources":["../src/BaseElementConverter.es6"],"names":["FormItem","Item","Option","TextArea","logger","getLogger","BaseElementConverter","disabledDate","current","valueOf","Date","now","option","getFieldProps","field","fieldOptions","wrapper","obj","getFieldDecorator","dataType","debug","props","form","key","disabled","placeholder","transformSelect","transformNormal","formItemsConfig","getModalInnerTable","handleSubmit","event","name","data","selectOptions","options","forEach","push","value","selectChange","width"],"mappings":"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","file":"BaseElementConverter.js","sourcesContent":["/**\n * Created by zxh on 2016/12/12.\n */\nimport React from 'react';\nimport {\n  Form,\n  Col,\n  Input,\n  Button,\n  DatePicker,\n  Select,\n  Table,\n  Icon,\n  Radio,\n  InputNumber,\n  Checkbox,\n  Modal,\n  message,\n  notification,\n  Affix,\n  Upload,\n  TimePicker\n} from 'antd';\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nconst TextArea = Input.TextArea;\n\nimport Logger from 'ns_logger';\n\n\nconst logger = Logger.getLogger('BaseElementConverter');\n\nclass BaseElementConverter {\n  convert(option) {\n\n    const {getFieldProps, field, fieldOptions, wrapper, obj,getFieldDecorator} = option;\n    switch (field.dataType) {\n      case 'textarea':\n        logger.debug('transform field %o to varcharOne input', field);\n        return wrapper((\n          {...obj.props.form.getFieldDecorator(field.key,fieldOptions)(<TextArea disabled={field.disabled}  placeholder={field.placeholder} autosize />)}\n        ), field);\n      case 'select':\n        return this.transformSelect(option);\n    }\n    return this.transformNormal(option);\n  }\n  disabledDate = (current) => {\n    // Can not select days before today and today\n    return current && current.valueOf() > Date.now();\n  }\n\n\n  /**\n   * 将schema中的一列转换为普通输入框\n   *\n   * @param field\n   * @returns {XML}\n   */\n  transformNormal(option) {\n    const {getFieldProps, field, fieldOptions, wrapper, obj} = option;\n    switch (field.dataType) {\n      case 'int':\n        logger.debug('transform field %o to integer input', field);\n        return wrapper((\n          {...obj.props.form.getFieldDecorator(field.key,fieldOptions)(<InputNumber size=\"default\"\n                                                                                    disabled={\n                                                                                      obj.props.formItemsConfig\n                                                                                      && obj.props.formItemsConfig[field.key]\n                                                                                      && obj.props.formItemsConfig[field.key].disabled\n                                                                                    }/>)}\n        ), field);\n      case 'float':\n        logger.debug('transform field %o to float input', field);\n        return wrapper((\n          {...obj.props.form.getFieldDecorator(field.key,fieldOptions)(<InputNumber step={0.01} size=\"default\"  placeholder={field.placeholder}  {...getFieldProps(field.key, fieldOptions) } />)}\n        ), field);\n      case 'datetime':\n        logger.debug('transform field %o to datetime input', field);\n        return wrapper((\n          {...obj.props.form.getFieldDecorator(field.key,fieldOptions)(<DatePicker showTime format=\"YYYY-MM-DD HH:mm:ss\"\n            placeholder={field.placeholder || '请选择日期'} />)}\n        ), field);\n      case 'untilNowTime': //业务需求，日期格式为截至今天，且格式形如2017-05-21\n        logger.debug('transform field %o to datetime input', field);\n        return wrapper((\n          {...obj.props.form.getFieldDecorator(field.key,fieldOptions)(<DatePicker showTime format=\"YYYY-MM-DD\"  disabledDate={this.disabledDate}  size=\"default\"\n            placeholder={field.placeholder || '请选择日期'} />)}\n        ), field);\n      case 'time':\n        logger.debug('transform field %o to datetime input', field);\n        return wrapper((\n          {...obj.props.form.getFieldDecorator(field.key,fieldOptions)(<TimePicker  showTime format=\"HH:mm:ss\"\n                                                                                    placeholder={field.placeholder || '请选择时间'}\n                                                                                    disabled={\n                                                                                      obj.props.formItemsConfig\n                                                                                      && obj.props.formItemsConfig[field.key]\n                                                                                      && obj.props.formItemsConfig[field.key].disabled\n                                                                                    }/>)}\n        ), field);\n      case 'varchar':  // 默认就是普通的输入框\n        logger.debug('transform field %o to varchar input', field);\n        return wrapper((\n           {...obj.props.form.getFieldDecorator(field.key,fieldOptions)(<Input onClick={field.getModalInnerTable}\n                                                                               placeholder={field.placeholder}\n                                                                               disabled={\n                                                                                 obj.props.formItemsConfig\n                                                                                 && obj.props.formItemsConfig[field.key]\n                                                                                 && obj.props.formItemsConfig[field.key].disabled\n                                                                               }\n                                                                               size=\"default\"\n                                                                               onPressEnter={ function () {\n                                                                                   obj.handleSubmit && obj.handleSubmit(event);\n                                                                               } } />)}\n        ), field);\n      case 'hidden':  // 隐藏表单域\n        logger.debug('transform field %o to hidden input', field);\n        return wrapper((\n          {...obj.props.form.getFieldDecorator(field.key,fieldOptions)(<Input type=\"hidden\" placeholder={field.placeholder} disabled={field.disabled} size=\"default\" />)}\n        ), field);\n      case 'varTable':\n        logger.debug('transform field %o to hidden input', field);\n        return wrapper((\n          {...obj.props.form.getFieldDecorator(field.key,fieldOptions)(<Col>{field.name}{field.data !== \"\" ? field.data :<a href='javascript:;'>点击下载</a>}</Col>)}\n        ), field);\n    }\n  }\n\n  /**\n   * 将schema中的一列转换为下拉框\n   *\n   * @param field\n   */\n  transformSelect(option) {\n    const {getFieldProps, field, fieldOptions, wrapper,obj} = option;\n    logger.debug('transform field %o to varcharSelect', field);\n\n    let selectOptions = [];\n\n    if (field.options) {\n      field.options.forEach((option) => {\n        selectOptions.push(<Option value={option.value} key={option.value}>{option.name}</Option>);\n      });\n    }\n\n    return wrapper((\n      {...obj.props.form.getFieldDecorator(field.key,fieldOptions)(<Select onSelect={field.selectChange} disabled={field.disabled} style={{ width: 200 }} placeholder=\"请选择\">\n        {selectOptions}\n      </Select>)}\n    ), field);\n  }\n\n}\n\nexport default BaseElementConverter;\n"]}